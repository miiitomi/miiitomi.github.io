<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on miiitomi</title>
    <link>https://miiitomi.github.io/post/</link>
    <description>Recent content in Posts on miiitomi</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Fri, 11 Feb 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://miiitomi.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>マッチングアルゴリズムの解説</title>
      <link>https://miiitomi.github.io/p/matching/</link>
      <pubDate>Fri, 11 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://miiitomi.github.io/p/matching/</guid>
      <description>こちらに男性と女性をマッチさせるDAアルゴリズムの実行ができるウェブアプリを公開しました。 このページでは、実装したDAアルゴリズム（Gale-Shapleyアルゴリズム）の解説を行います。
安定結婚問題 DAアルゴリズムは「安定結婚問題」という問題を解くアルゴリズムとして知られています。 安定結婚問題とは、
男性と女性がそれぞれ複数人おり、 各男性はマッチしたい女性の希望順位表を、各女性はマッチしたい男性の希望順位表を提出し、 提出された希望順位表に基づいて男性と女性をマッチさせる という状況において、参加者に不満の残らないようなマッチのさせ方はどのようなものかを考えるものです。
例 男性は A、B、C の3人、女性は X、Y、Z の3人とし、提出された希望表は以下の通りであったとします。
A B C X Y Z 第1希望 X X Y C A B 第2希望 Z Y Z A B A 第3希望 Y Z X B C ここで Z さんの第3希望が空白となっているのは、「第2希望までの相手とマッチできなかった場合、それ以外の相手とマッチするよりは誰ともマッチしない方が良い」という意味です。1 この状況において、不満の残らないマッチというのはどのようなものでしょうか。
安定マッチング 安定結婚問題の目標は、参加者に不満の残らないマッチを見つけることです。では、まずどのようなマッチでは参加者に不満が残るか考えてみましょう。
上記の例において、次のようなマッチを考えてみます。
A さん &amp;ndash; X さん B さん &amp;ndash; Y さん C さん &amp;ndash; Z さん この例において、Z さんは自身が希望表に書いていない C さんとマッチしています。 この場合、Z さんは希望しない相手と無理矢理マッチさせられているという点で不満を持つでしょう。 したがって、安定結婚問題におけるマッチはまず次の条件を満たすことが望まれます。</description>
    </item>
    
    <item>
      <title>2021年の振り返りと2022年にやりたいこと</title>
      <link>https://miiitomi.github.io/p/20220101/</link>
      <pubDate>Sat, 01 Jan 2022 16:50:04 +0900</pubDate>
      
      <guid>https://miiitomi.github.io/p/20220101/</guid>
      <description>せっかくこんなブログ作ってみたりしたので、2021年の振り返りでもしてみようかと思います。
マーケットデザインの共同研究・社会実装プロジェクトの開始 今年一年何をやっていたかと言うと、色々やっていたのですが大きなものだと主にこれをやってました。
＼プレスリリース／
AI Lab、GovTech開発センター、東京大学マーケットデザインセンター (@UTokyoMD) にて、共同研究を開始いたします。
官公庁・自治体のDXを #マーケットデザイン で推進。 経済学者の小島武仁氏、鎌田雄一郎氏と共に、社会課題の解決を目指します。#UTMDhttps://t.co/I8aFFVcfeu
&amp;mdash; サイバーエージェント　広報＆IR担当 (@CyberAgent_PR) March 16, 2021 具体的には、Advent Calendar で自分が書かせていただいた「保育所利用調整マッチングの実証実験」に取り組んでいます。
🎄#CyberAgentAdventCalendar2021🎄
9日目は #AILab が東京大学マーケットデザインセンター（UTMD）との共同研究の1つとして取り組んでいる「保育所マッチングプロジェクト」についてご紹介しています。ぜひご覧ください。https://t.co/EhfDpZ7rO6
&amp;mdash; CyberAgentDevelopers (@ca_developers) December 9, 2021 自分はこのプロジェクトで、経済学・CS分野で研究されているマッチングアルゴリズムを現実の問題に即した形で実装し、どういったアルゴリズムを使うべきかと言う議論と新アルゴリズムの開発を行なっています。
学生時代自分は研究でもプライベートでもプログラミングをすることはほとんどなかったため、 実装に手間取ったりすることも多々あり自分の力不足を感じることも多いのですが、 大学で学んできたマーケットデザインを実際に活用していくための社会実装プロジェクトということでとてもやりがいを持って取り組めています。
またこれ以外にもマッチング・マーケットデザイン関連の研究や社内での応用・社会実装プロジェクトをいくつか進めています。
広報・登壇 社内外向けの広報活動・登壇も色々させていただいた1年でした。
前述のプロジェクトでご一緒させていただいている鎌田先生と会社のオウンドメディアのFeaturesで対談させてもらったり、
―マーケットデザインと、その有用性を知ってもらいたい
近年注目が高まる、新しい研究領域「マーケットデザイン」
より良い社会の設計、共同研究での利点、両者の見据える未来についてなど、世界で活躍する経済学者 鎌田准教授と、AI Lab研究員冨田が対談を実施しました。https://t.co/c1JCH1Wjkt
&amp;mdash; サイバーエージェント　広報＆IR担当 (@CyberAgent_PR) September 21, 2021 また、EconFiesta2や日経学会秋季大会の企画セッション、企業研究のカンファレンスCCSEなどでもお話しさせていただきました。
A会場では12:00から、#経済学 に関する個人セッションがスタートします！
メルカリから柳沼慎哉氏、サイバーエージェントから冨田 燿志氏が登壇します😀
▼タイムテーブルhttps://t.co/g30pR8GSef
#CCSE2021 pic.twitter.com/TAzgnVcFvw
&amp;mdash; CCSE2021_企業による合同研究カンファレンス (@ccse_comitee) December 17, 2021 CA AWARDS そんなこんなしていたら、9月の全社表彰では20新卒入社対象のBest Rookie Awardとして表彰していただいちゃいました。</description>
    </item>
    
    <item>
      <title>『オレが私になるまで』</title>
      <link>https://miiitomi.github.io/p/oregawatashininarumade/</link>
      <pubDate>Thu, 30 Dec 2021 11:09:50 +0900</pubDate>
      
      <guid>https://miiitomi.github.io/p/oregawatashininarumade/</guid>
      <description>「シリアスTSF」とは 「シリアスTSF」というジャンルをご存知だろうか。
いやご存知だろうかと言ってみたが、最近僕が勝手にそう呼び始めただけなので、そういう言葉があるのかどうか僕も知らないのだけど。
僕なりに定義してみると、シリアスTSFとは「ギャグ要素やエロ要素ではなく、TSに伴う登場人物の内面の葛藤や周りの人間関係の変化といったシリアス要素に物語の重きを置いた、ヒューマンドラマとしてのTSF（Trans-Sexual Fiction/性転換もの）」である。
ギャグでもエロでもないシリアスめなTSFが好きって話したことありましたっけ？
&amp;mdash; みーとみ (@miiitomi) October 24, 2021 現実にはあり得ない状況における少年・少女たちの戸惑い、葛藤が魅力のこのジャンルの作品を、 これから1つずつ僕が飽きるまで紹介していきたいと思う。
『オレが私になるまで』 1回目の今回は、シリアスTSFの王道作品である(と僕が勝手に思っている)この作品だ。
オレが私になるまで 4 (MFC) 『オレが私になるまで』（佐藤はつき作）、ComicWalkerにて連載しており、単行本は2021年12月現在でMFコミックスから4巻が刊行されている。
あらすじ やんちゃな小2男子の藤宮明(あきら)は、クラスの女の子に対ししょっちゅういたずらを働き、特に幼馴染の奈々に対してはスカートめくりの対象にするなどしていた。 ある夜、熱を出して一晩寝込むと、翌朝には髪が伸び女の子になっている。 病院での診断は「突発性性転換症候群」。 ある日突然性別が変わってしまう病気で、原因は不明、治療法もなく、女子として生きていかなければならなくなった。
男子に戻れないという事実を受け入れられず、女の子らしくすることを拒否し、これまで通りに元の学校に行こうとする明。 しかし周りの男子には受け入れられず服を脱がされるといったいじめを受け、一方かつて酷いことをし続けた女子たちには助けを求めることもできない。 さらにクラスメイトの保護者にはこの病気が感染性のものなのではないかと忌避され（実際には他の子にうつることはない）、元の学校には馴染めないまま、明は離れた祖母の家から別の小学校に女の子として通うことになった。
転校先の学校でも初めは女の子として上手く振る舞うことができない明だったが、そこで優しく友人として接してくれる渡井瑠海(るみ)に出会って……。
CAUTION!!
以下未読者の楽しみを奪わないように注意してこの作品の魅力を述べていくつもりですが、作品を読む前にネタバレや他者の感想を見たくない方は以下注意して、自己責任で読んでください！
瑠海と奈々 この物語で明にとって最重要人物になると言えるのが、転校先で出会い親友となる渡井瑠海だ。 転校先で男子が苦手になり、だが女子としても上手く振る舞えず女子に混ざることに恐怖心を抱く明を、瑠海は女子として優しく普通に接し、やがて明も心を開いて唯一無二の親友と呼べる存在になっていく。 そうしてやがて他の女子とも打ち解けていくのだが、ここで思い出すのが転校前の学校でひどいことをしてきたクラスメイトの女子たち、とりわけ幼馴染の奈々だ。
『オレが私になるまで』1巻第7話より 自分が女子として周りに受け入れられていくごとに奈々たちの視線を思い出すとともに、 元男子で女子をいじめてきた自分が女子として受け入れられてしまうことへの申し訳さと、 いつか元男子であったことが分かって気持ち悪がられるのではないかという恐怖心に明は苛まれることになる……。
この明と瑠海を中心とした周りの人間関係と、前の学校の奈々らとの関係性の中に生まれる、TSF独特の要素が絡んだヒューマンドラマがこの作品の魅力の一つだ。 瑠海との関係性がこの後どのように変化していくかと、転校後関わることはないが明の心の中に深く潜んでいる奈々との関係性がどのように精算されるのか、今後の展開のキーの一つになるだろう。
女の子としての自分の受け入れ 前項の話が人間関係から生まれる外向きのヒューマンドラマとしたら、 「明が女の子としての自分を受け入れる過程での葛藤」は明の内面の話になるだろうか（もちろんその二つは深く関連しあっているので簡単に外向き・内面と二項的に対置できるものではないが）。
最初、明は2度と男に戻れないという事実を受け入れられず、女の子らしくすることを一切拒否しようとする。 だが瑠海を中心にクラスで女子として受け入れられていくとともに、 明も少しずつ自ら女の子らしい格好をしようという意図が芽生えてくる。
しかし、明が男の子だった頃を当然知っており、当初女の子らしい格好をすることを全力で拒否していた明を見ている母親は、 明が女の子らしい格好をしていることを友達付き合いで仕方なく嫌々やっているものだと思い、明に無理しなくていいと伝えようとする。
『オレが私になるまで』1巻第10話より これだけなら転換後の性別を葛藤しながらも徐々に受け入れつつある子と、 子のために元の性別のまま生きていけるようにと願う親とのすれ違いと、 それを乗り越えようとする本人というシリアスTSFにありがちな（というほどシリアスTSF作品は多くないが、少なくともこの設定において素直な）展開なのだが、 ただ母親に伝えづらいというだけでなく、明本人の中にもそれを伝えづらい理由があり……。
『オレが私になるまで』4巻第41話より 可愛い格好をしたいけど、元の性別としての自分もまだあって、 生まれた時から自分を一番身近で見てきた母親にそれを伝えたら、それこそ本当に自分が変わってしまうんじゃないかという恐怖感。
もちろん僕自身がこれと全く同じような経験をしたことはないのだが、 でもそれを一番身近な人に口に出してしまうことで何かが決定的に変わってしまうような怖さは、自分にもわかるような気がする。 そういう微妙な心境をうまく表している良いシーンだと思った。
まとめ ここで紹介しなかったが物語上重要な役割を果たしている要素・登場人物はまだまだ沢山ある。 TSFと言われるとちょっとマニアックなジャンルに思われて手を伸ばしづらく感じている人もいるかもしれないが、人間の内面の葛藤と人間関係を描くヒューマンドラマが好きな人なら楽しめるシリアスTSF作品はあると思う。 その中でも王道的な(と僕が思う)この作品を、もし興味を持った方がいれば手に取ってみてもらえたらとても嬉しい。
12月22日発売の「オレが私になるまで」4巻の書店特典一覧です。
12月22日！！12月22日！！！12月22日です！！！！
よろしくお願いします！！！！#オレが私になるまで pic.twitter.com/Kl01mWH7Yh
&amp;mdash; 佐藤はつき@4巻12月22日発売 (@hatukisu) December 20, 2021 </description>
    </item>
    
    <item>
      <title>Scarf&#39;s lemmaとその実装</title>
      <link>https://miiitomi.github.io/p/scarf/</link>
      <pubDate>Sat, 25 Dec 2021 10:53:40 +0900</pubDate>
      
      <guid>https://miiitomi.github.io/p/scarf/</guid>
      <description>はじめに 誰しも普通に生きていると一度くらいScarf&amp;rsquo;s lemmaを実装する場面に遭遇すると思いますが、意外と日本語の情報が出てこなくて困ったことのある人もいるかもしれません。 Scarf’s lemma完全理解して実装完了したらqiitaかzennかにでも誰得記事書いてやろうかな
&amp;mdash; みーとみ (@miiitomi) November 19, 2021 というツイートを前にしましたが、せっかくブログ作ったのでここに勉強記録としてまとめてみようと思います。 お気持ち整理みたいな感じなので証明はちゃんとしないし、数学的・ゲーム理論的に厳密でない書き方してるとこも多々あるかも。
Scarf&amp;rsquo;s lemma とは Scarf&amp;rsquo;s lemmaとは Scarf (1967) で示されたコアを求めるための補題です。 応用としては、例えばマッチング理論の文脈で Nguyen and Vohra (2018) で安定マッチングを求めるために使用されています。
命題 $A, C$ は $n\times m$ $(n &amp;lt; m)$ の行列で $$ \begin{align*} A &amp;amp;= \begin{bmatrix} 1 &amp;amp; \dots &amp;amp; 0 &amp;amp; a_{1,n+1} &amp;amp; \dots &amp;amp; a_{1,m} \cr \vdots &amp;amp;\ddots &amp;amp; \vdots &amp;amp; \vdots &amp;amp; &amp;amp; \vdots \cr 0 &amp;amp; \dots &amp;amp; 1 &amp;amp; a_{n,n+1} &amp;amp; \dots &amp;amp; a_{n,m} \end{bmatrix},\cr C &amp;amp;= \begin{bmatrix} c_{1,1} &amp;amp; \dots &amp;amp; c_{n,1} &amp;amp; c_{1,n+1} &amp;amp; \dots &amp;amp; c_{1,m} \cr \vdots &amp;amp;\ddots &amp;amp; \vdots &amp;amp; \vdots &amp;amp; &amp;amp; \vdots \cr c_{n,1} &amp;amp; \dots &amp;amp; c_{n,n} &amp;amp; c_{n,n+1} &amp;amp; \dots &amp;amp; c_{n,m} \end{bmatrix} \end{align*} $$ の形のもので、$C$ は以下を満たすとします（これを標準形（standard form）と呼ぶことにします）：</description>
    </item>
    
    <item>
      <title>非エンジニアの初心者がHugo(テーマStack)&#43;GitHub Pagesでブログを開設するまで</title>
      <link>https://miiitomi.github.io/p/hugo/</link>
      <pubDate>Thu, 09 Dec 2021 21:30:20 +0900</pubDate>
      
      <guid>https://miiitomi.github.io/p/hugo/</guid>
      <description>はじめに タイトルの通りです。 このブログを開設するまでにやったことを備忘録としてまとめておきます。 わざわざ僕が新たに書き記すまでもなく似たような記事はたくさんあるのですが、1本目に書く内容としてちょうどいい感じのものな気がしたので。 分かってる人からしたらそりゃそうってことしか書いてないと思うけど、僕みたいな初心者が見たら1ミリくらい参考になるかもしれない（ならないかもしれない）。
ちなみにタイトルに「非エンジニアの初心者が」と書きましたが、すごく広い意味で捉えればエンジニアと言えなくもないかも。 でも自己認識としてはエンジニアを名乗れるほど技術力はない（し肩書きもリサーチャーな）ので嘘ではないでしょう。 Git/GitHubの使い方とかは一応わかってることを仮定します。
使ったもの・環境 macBook Pro/macOS Big Sur v11.1 Homebrew v3.3.7 Hugo v0.89.4 Hugo Theme Stack Git/GitHub Hugoのインストール・スタート とりあえずHomebrewを使って、ターミナルで brew install hugo でHugoをインストールします。 hubo version と打ってバージョン確認すると
$ hugo version hugo v0.89.4+extended darwin/amd64 BuildDate=unknown と出るので入ったっぽい。
ブログ用のディレクトリを作るところで hugo new site sitename (sitenameのところは適当に) とすると、
$ hugo new site sitename Congratulations! Your new Hugo site is created in ***/***/sitename. Just a few more steps and you&amp;#39;re ready to go: 1.</description>
    </item>
    
  </channel>
</rss>
